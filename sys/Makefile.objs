#
# Makefile for MiNT
#

SHELL = /bin/sh
SUBDIRS = 

srcdir = ..
top_srcdir = ..
subdir = $(compile_dir)

default: all

include $(top_srcdir)/CONFIGVARS
include $(top_srcdir)/RULES
include $(top_srcdir)/PHONY

all-here: build

# default overwrites
DEFINITIONS = $(KERNELDEFAULTDEFS) $(KERNELDEFS)
WARN =	-Wall \
	-Wmissing-prototypes \
	-Winline
LDFLAGS = -nostdlib
LDFLAGS += -Wl,-Map -Wl,map.txt
# XXX should be come from arch/
LDFLAGS += -Wl,--entry -Wl,_main
LIBS = $(LIBKERN) -lgcc

ifeq ($(KMEMDEBUG),yes)
LDFLAGS += \
	-Wl,--wrap -Wl,_kcore \
	-Wl,--wrap -Wl,_kmalloc \
	-Wl,--wrap -Wl,_kfree \
	-Wl,--wrap -Wl,_umalloc \
	-Wl,--wrap -Wl,_ufree
endif

NOCFLAGS-gmon.c = -pg
NOCFLAGS-mcount.c = -pg
NOCFLAGS-profil.c = -pg
NOCFLAGS-update.c = -pg

NOCFLAGS-bios.c = -mcfv4e
CFLAGS-bios.c = -m68000
NOCFLAGS-biosfs.c = -mcfv4e
CFLAGS-biosfs.c = -m68000
NOCFLAGS-dos.c = -mcfv4e
CFLAGS-dos.c = -m68000
NOCFLAGS-dosfile.c = -mcfv4e
CFLAGS-dosfile.c = -m68000
NOCFLAGS-fatfs.c = -mcfv4e
CFLAGS-fatfs.c = -m68000
NOCFLAGS-k_exec.c = -mcfv4e
CFLAGS-k_exec.c = -m68000
NOCFLAGS-k_exit.c = -mcfv4e
CFLAGS-k_exit.c = -m68000
NOCFLAGS-k_fork.c = -mcfv4e
CFLAGS-k_fork.c = -m68000
NOCFLAGS-module.c = -mcfv4e
CFLAGS-module.c = -m68000
NOCFLAGS-proc.c = -mcfv4e
CFLAGS-proc.c = -m68000
NOCFLAGS-procfs.c = -mcfv4e
CFLAGS-procfs.c = -m68000
NOCFLAGS-ptrace.c = -mcfv4e
CFLAGS-ptrace.c = -m68000
NOCFLAGS-random.c = -mcfv4e
CFLAGS-random.c = -m68000
NOCFLAGS-rendez.c = -mcfv4e
CFLAGS-rendez.c = -m68000
NOCFLAGS-signal.c = -mcfv4e
CFLAGS-signal.c = -m68000
NOCFLAGS-timeout.c = -mcfv4e
CFLAGS-timeout.c = -m68000
NOCFLAGS-xbios.c = -mcfv4e
CFLAGS-xbios.c = -m68000


cflags = $(kernel_cflags)
nocflags = $(kernel_nocflags)

# default definitions
GENFILES = $(BUILDINFO) $(MINT)
BUILD = info
BUILDINFO = $(BUILD).o
OBJS = $(COBJS:.c=.o)

VPATH = ..

#
# main target
#
build: $(MINT)

$(MINT): $(OBJS) $(BUILDINFO) $(LIBKERNTARGET)
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ \
		$(shell for file in `cat $(srcdir)/arch/$(compile_dir)/startup` ; \
			do echo $(srcdir)/arch/$(compile_dir)/$$file ; done) \
		$(OBJS) $(BUILDINFO) \
		$(shell for file in `cat $(srcdir)/arch/$(compile_dir)/objs` ; \
			do echo $(srcdir)/arch/$(compile_dir)/$$file ; done) \
		$(shell for mdir in '$(MODULEDIRS)'; do \
				for file in `cat $(srcdir)/$$mdir/$(compile_dir)/objs` ; \
					do echo $(srcdir)/$$mdir/$(compile_dir)/$$file ; \
				done; \
			done) \
		$(LIBS)

$(BUILDINFO): compiler buildheader buildserial
	$(CC) $(CFLAGS) -o $@ -c $(srcdir)/$(BUILD).c

compiler:
	cd $(srcdir)/buildinfo; \
	CC="$(CC)" \
	OPTS="$(GENERAL) $(MODEL) $(OPTS)" \
	DEFS="$(DEFINITIONS)" \
	sh cdef.sh

buildheader:
	cd $(srcdir)/buildinfo; ./mkbuild

buildserial: $(srcdir)/buildinfo/version.h
	cd $(srcdir)/buildinfo; echo 1 >$@

# default dependencies
# must be included last
include $(top_srcdir)/DEPENDENCIES
