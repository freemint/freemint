/*
 * $Id$
 *
 * This file belongs to FreeMiNT. It's not in the original MiNT 1.12
 * distribution. See the file CHANGES for a detailed log of changes.
 *
 *
 * Copyright 2000 Frank Naumann <fnaumann@freemint.de>
 * All rights reserved.
 *
 * This file is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This file is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 *
 * Author: Frank Naumann <fnaumann@freemint.de>
 * Started: 2000-01-01
 *
 * Please send suggestions, patches or bug reports to me or
 * the MiNT mailing list.
 *
 */


/*
 * Syntax:
 * 
 * opcode class name args
 * opcode class name args (unimplemented|unsupported|passthrough)
 * opcode (undefined|passthrough)
 * 
 * 
 * opcode - syscall number
 * class  - syscall class
 * name   - syscall name
 * args   - C style prototype
 * 
 * syscall status:
 * 
 * - undefined
 *   there is no system call defined for this opcode -> ENOSYS
 * 
 * - unsupported
 *   system call defined but not supported -> ENOSYS
 * 
 * - unimplemented
 *   system call defined but not yet implemented -> ENOSYS
 * 
 * - passthrough
 *   no entry in table, e.g. pass through to TOS
 * 
 * MAX - size of table
 *
 * missing entries are automatically set to status 'undefined'
 *
 */


[ GEMDOS ]

/*
opcode	class name	args */

0x000	p term0		(void)

0x001	c conin		(void)
0x002	c conout	(short c)
0x003	c auxin		(void)
0x004	c auxout	(short c)
0x005	c prnout	(short c)
0x006	c rawio		(short c)
0x007	c rawcin	(void)
0x008	c necin		(void)
0x009	c conws		(const char *str)
0x00a	c conrs		(char *buf)
0x00b	c conis		(void)
0x00c	  undefined
0x00d	  undefined
0x00e	d setdrv	(short d)
0x00f	  undefined

0x010	c conos		(void)
0x011	c prnos		(void)
0x012	c auxis		(void)
0x013	c auxos		(void)
0x014	m addalt	(long start, long size)
0x015	s realloc	(void)
0x016	s slbopen	(void)				/* 1.15.3, MagiC 5 */
0x017	s slbclose	(void)				/* 1.15.3, MagiC 5 */
0x018	  undefined
0x019	d getdrv	(void)
0x01a	f setdta	(struct dtabuf *dta)
0x01b	  undefined
0x01c	  undefined
0x01d	  undefined
0x01e	  undefined
0x01f	  undefined

0x020	s super		(long new_ssp)
0x021	  undefined
0x022	  undefined
0x023	  undefined
0x024	  undefined
0x025	  undefined
0x026	  undefined
0x027	  undefined
0x028	  undefined
0x029	  undefined
0x02a	t getdate	(void)
0x02b	t setdate	(ushort date)
0x02c	t gettime	(void)
0x02d	t settime	(ushort date)
0x02e	  undefined
0x02f	f getdta	(void)

0x030	s version	(void)
0x031	p termres	(long save, short code)
0x032	  undefined
0x033	s config	(short subfn, long flags) unsupported /* MagiC */
0x034	  undefined
0x035	  undefined
0x036	d free		(long *buf, short d)
0x037	  undefined
0x038	  undefined
0x039	d create	(const char *name, short attrib)
0x03a	d delete	(const char *path)
0x03b	d setpath	(const char *path)
0x03c	f create	(const char *name, short attrib)
0x03d	f open		(const char *name, short mode)
0x03e	f close		(short fh)
0x03f	f read		(short fh, long count, char *buf)

0x040	f write		(short fh, long count, const char *buf)
0x041	f delete	(const char *path)
0x042	f seek		(long place, short fh, short how)
0x043	f attrib	(const char *name, short rwflag, short attr)
0x044	m xalloc	(long size, short mode)
0x045	f dup		(short fh)
0x046	f force		(short newh, short oldh)
0x047	d getpath	(char *path, short drv)
0x048	m alloc		(long size)
0x049	m free		(long block)
0x04a	m shrink	(short dummy, long block, long size)
0x04b	p exec		(short mode, const void *ptr1, const void *ptr2, const void *ptr3)
0x04c	p term		(short code)
0x04d	  undefined
0x04e	f sfirst	(const char *path, short attrib)
0x04f	f snext		(void)

0x050	  undefined
0x051	  undefined
0x052	  undefined
0x053	  undefined
0x054	  undefined
0x055	  undefined
0x056	f rename	(short junk, const char *old, const char *new)
0x057	f datime	(short *timeptr, short fh, short wflag)
0x058	  undefined
0x059	  undefined
0x05a	  undefined
0x05b	  undefined
0x05c	f lock		(short fh, short mode, long start, long length)
0x05d	  undefined
0x05e	  undefined
0x05f	  undefined

0x060	  undefined
0x061	  undefined
0x062	  undefined
0x063	  undefined
0x064	  undefined
0x065	  undefined
0x066	  undefined
0x067	  undefined
0x068	  undefined
0x069	  undefined
0x06a	  undefined
0x06b	  undefined
0x06c	  undefined
0x06d	  undefined
0x06e	  undefined
0x06f	  undefined

0x070	  undefined
0x071	  undefined
0x072	  undefined
0x073	  undefined
0x074	  undefined
0x075	  undefined
0x076	  undefined
0x077	  undefined
0x078	  undefined
0x079	  undefined
0x07a	  undefined
0x07b	  undefined
0x07c	  undefined
0x07d	  undefined
0x07e	  undefined
0x07f	  undefined

0x080	  undefined
0x081	  undefined
0x082	  undefined
0x083	  undefined
0x084	  undefined
0x085	  undefined
0x086	  undefined
0x087	  undefined
0x088	  undefined
0x089	  undefined
0x08a	  undefined
0x08b	  undefined
0x08c	  undefined
0x08d	  undefined
0x08e	  undefined
0x08f	  undefined

0x090	  undefined
0x091	  undefined
0x092	  undefined
0x093	  undefined
0x094	  undefined
0x095	  undefined
0x096	  undefined
0x097	  undefined
0x098	  undefined
0x099	  undefined
0x09a	  undefined
0x09b	  undefined
0x09c	  undefined
0x09d	  undefined
0x09e	  undefined
0x09f	  undefined

0x0a0	  undefined
0x0a1	  undefined
0x0a2	  undefined
0x0a3	  undefined
0x0a4	  undefined
0x0a5	  undefined
0x0a6	  undefined
0x0a7	  undefined
0x0a8	  undefined
0x0a9	  undefined
0x0aa	  undefined
0x0ab	  undefined
0x0ac	  undefined
0x0ad	  undefined
0x0ae	  undefined
0x0af	  undefined

0x0b0	  undefined
0x0b1	  undefined
0x0b2	  undefined
0x0b3	  undefined
0x0b4	  undefined
0x0b5	  undefined
0x0b6	  undefined
0x0b7	  undefined
0x0b8	  undefined
0x0b9	  undefined
0x0ba	  undefined
0x0bb	  undefined
0x0bc	  undefined
0x0bd	  undefined
0x0be	  undefined
0x0bf	  undefined

0x0c0	  undefined
0x0c1	  undefined
0x0c2	  undefined
0x0c3	  undefined
0x0c4	  undefined
0x0c5	  undefined
0x0c6	  undefined
0x0c7	  undefined
0x0c8	  undefined
0x0c9	  undefined
0x0ca	  undefined
0x0cb	  undefined
0x0cc	  undefined
0x0cd	  undefined
0x0ce	  undefined
0x0cf	  undefined

0x0d0	  undefined
0x0d1	  undefined
0x0d2	  undefined
0x0d3	  undefined
0x0d4	  undefined
0x0d5	  undefined
0x0d6	  undefined
0x0d7	  undefined
0x0d8	  undefined
0x0d9	  undefined
0x0da	  undefined
0x0db	  undefined
0x0dc	  undefined
0x0dd	  undefined
0x0de	  undefined
0x0df	  undefined

0x0e0	  undefined
0x0e1	  undefined
0x0e2	  undefined
0x0e3	  undefined
0x0e4	  undefined
0x0e5	  undefined
0x0e6	  undefined
0x0e7	  undefined
0x0e8	  undefined
0x0e9	  undefined
0x0ea	  undefined
0x0eb	  undefined
0x0ec	  undefined
0x0ed	  undefined
0x0ee	  undefined
0x0ef	  undefined

/*
 * MiNT extensions to GEMDOS
 */

0x0f0	  undefined
0x0f1	  undefined
0x0f2	  undefined
0x0f3	  undefined
0x0f4	  undefined
0x0f5	  undefined
0x0f6	  undefined
0x0f7	  undefined
0x0f8	  undefined
0x0f9	  undefined
0x0fa	  undefined
0x0fb	  undefined
0x0fc	  undefined
0x0fd	  undefined
0x0fe	  undefined
0x0ff	s yield		(void)

0x100	f pipe		(short *usrh)
0x101	f fchown	(short fh, short uid, short gid)		/* 1.15.2  */
0x102	f fchmod	(short fh, ushort mode)				/* 1.15.2  */
0x103	f fsync		(short fh)					/* 1.15.10 */
0x104	f fcntl		(short fh, long arg, short cmd)
0x105	f instat	(short fh)
0x106	f outstat	(short fh)
0x107	f getchar	(short fh, short mode)
0x108	f putchar	(short fh, long c, short mode)
0x109	p wait		(void)
0x10a	p nice		(short increment)
0x10b	p getpid	(void)
0x10c	p getppid	(void)
0x10d	p getpgrp	(void)
0x10e	p setpgrp	(short pid, short newgrp)
0x10f	p getuid	(void)

0x110	p setuid	(ushort id)
0x111	p kill		(short pid, short sig)
0x112	p signal	(short sig, long handler)
0x113	p vfork		(void)
0x114	p getgid	(void)
0x115	p setgid	(ushort id)
0x116	p sigblock	(ulong mask)
0x117	p sigsetmask	(ulong mask)
0x118	p usrval	(long arg)
0x119	p domain	(short arg)
0x11a	p sigreturn	(void)
0x11b	p fork		(void)
0x11c	p wait3		(short nohang, long *rusage)
0x11d	f select	(unsigned timeout, long *rfdp, long *wfdp, long *xfdp)
0x11e	p rusage	(long *r)
0x11f	p setlimit	(short i, long v)

0x120	t alarm		(long x)
0x121	p pause		(void)
0x122	s sysconf	(short which)
0x123	p sigpending	(void)
0x124	d pathconf	(const char *name, short which)
0x125	p msg		(short mode, long mbid, char *ptr)
0x126	f midipipe	(short pid, short in, short out)
0x127	p renice	(short pid, short increment)
0x128	d opendir	(const char *path, short flags)
0x129	d readdir	(short len, long handle, char *buf)
0x12a	d rewind	(long handle)
0x12b	d closedir	(long handle)
0x12c	f xattr		(short flag, const char *name, struct xattr *xattr)
0x12d	f link		(const char *old, const char *new)
0x12e	f symlink	(const char *old, const char *new)
0x12f	f readlink	(short buflen, char *buf, const char *linkfile)

0x130	d cntl		(short cmd, const char *name, long arg)
0x131	f chown		(const char *name, short uid, short gid)
0x132	f chmod		(const char *name, unsigned mode)
0x133	p umask		(ushort mode)
0x134	p semaphore	(short mode, long id, long timeout)
0x135	d lock		(short mode, short drv)
0x136	p sigpause	(ulong mask)
0x137	p sigaction	(short sig, const struct sigaction *act, struct sigaction *oact)
0x138	p geteuid	(void)
0x139	p getegid	(void)
0x13a	p waitpid	(short pid, short nohang, long *rusage)
0x13b	d getcwd	(char *path, short drv, short size)
0x13c	s alert		(char *msg)
0x13d	t malarm	(long x)
0x13e	p sigintr	(ushort vec, ushort sig) unsupported /* cancelled in 1.16 */
0x13f	s uptime	(ulong *cur_uptim, ulong loadave[3])

0x140	p trace		(short request, short pid, void *addr, long data) /* since 1.15.11 */
0x141	m validate	(short pid, void *addr, long size, long *flags) /* since 1.15.11 */
0x142	d xreaddir	(short len, long handle, char *buf, struct xattr *xattr, long *xret)
0x143	p seteuid	(ushort id)
0x144	p setegid	(ushort id)
0x145	p getauid	(void)
0x146	p setauid	(short id)
0x147	p getgroups	(short gidsetlen, ushort gidset[])
0x148	p setgroups	(short ngroups, ushort gidset[])
0x149	t setitimer	(short which, long *interval, long *value,
			 long *ointerval, long *ovalue)
0x14a	d chroot	(const char *dir) /* since 1.15.3  */
0x14b	f stat64	(short flag, const char *name, struct stat *stat) /* since 1.15.4  */
0x14c	f seek64	(long hiplace, long lowplace, short fh, short how, void *newpos) /* since 1.15.10 */
0x14d	d setkey	(long hidev, long lowdev, char *key, short cipher) /* since 1.15.4  */
0x14e	p setreuid	(ushort rid, ushort eid)
0x14f	p setregid	(ushort rid, ushort eid)

0x150	s sync		(void)
0x151	s halt		(long restart)
0x152	d readlabel	(const char *path, char *label, short maxlen)
0x153	d writelabel	(const char *path, const char *label)
0x154	s system	(short mode, ulong arg1, ulong arg2)
0x155	t gettimeofday	(struct timeval *tv, struct timezone *tz)
0x156	t settimeofday	(struct timeval *tv, struct timezone *tz)
0x157	t adjtime	(const struct timeval *delta, struct timeval *olddelta)
0x158	p getpriority	(short which, short who)
0x159	p setpriority	(short which, short who, short prio)
0x15a	f poll		(struct pollfd *fds, ulong nfds, ulong timeout) /* since 1.15.10 */
0x15b	f writev	(short fd, const struct iovec *iov, long niov) /* since 1.16 */
0x15c	f readv		(short fd, const struct iovec *iov, long niov) /* since 1.16 */
0x15d	f fstat		(short fd, struct stat *st) /* since 1.16 */
0x15e	p sysctl	(long *name, ulong namelen,
			 void *old, ulong *oldlenp,
			 const void *new, ulong newlen)
0x15f	s emulation	(ushort which, ushort op,
			 long a1, long a2, long a3, long a4,
			 long a5, long a6, long a7) /* since 1.15.8  */

	/* 1.16 - socket extensions */

0x160	f socket	(long domain, long type, long protocol)
0x161	f socketpair	(long domain, long type, long protocol, short fds[2])
0x162	f accept	(short fd, struct sockaddr *name, ulong *anamelen)
0x163	f connect	(short fd, const struct sockaddr *name, ulong namelen)
0x164	f bind		(short fd, const struct sockaddr *name, ulong namelen)
0x165	f listen	(short fd, long backlog)
0x166	f recvmsg	(short fd, struct msghdr *msg, long flags)
0x167	f sendmsg	(short fd, const struct msghdr *msg, long flags)
0x168	f recvfrom	(short fd, void *buf, ulong len, long flags,
			 struct sockaddr *from, ulong *fromlenaddr)
0x169	f sendto	(short fd, const void *buf, ulong len, long flags,
			 const struct sockaddr *to, ulong tolen)
0x16a	f setsockopt	(short fd, long level, long name, const void *val, ulong valsize)
0x16b	f getsockopt	(short fd, long level, long name, void *val, ulong *avalsize)
0x16c	f getpeername	(short fd, struct sockaddr *asa, ulong *alen)
0x16d	f getsockname	(short fd, struct sockaddr *asa, ulong *alen)
0x16e	f shutdown	(short fd, long how)
0x16f	  undefined

	/* 1.16 - svr5 IPC */

0x170	p shmget	(long key, long size, long shmflg)
0x171	p shmctl	(long shmid, long cmd, struct shmid_ds *buf)
0x172	p shmat		(long shmid, const void *shmaddr, long shmflg)
0x173	p shmdt		(const void *shmaddr)
0x174	p semget	(long key, long nsems, long semflg)
0x175	p semctl	(long semid, long semnum, long cmd, union __semun *arg)
0x176	p semop		(long semid, struct sembuf *sops, long nsops)
0x177	p semconfig	(long flag)
0x178	p msgget	(long key, long msgflg)
0x179	p msgctl	(long msqid, long cmd, struct msqid_ds *buf)
0x17a	p msgsnd	(long msqid, const void *msgp, long msgsz, long msgflg)
0x17b	p msgrcv	(long msqid, void *msgp, long msgsz, long msgtyp, long msgflg)
0x17c	  undefined
0x17d	m access	(void *addr, long size, short mode) /* since 1.15.12 */
0x17e	  undefined	/* mmap */
0x17f	  undefined	/* munmap */

0x180	f chown16	(const char *name, short uid, short gid,
			 short follow) /* since 1.16 */
0x181	  undefined
0x182	  undefined
0x183	  undefined
0x184	  undefined
0x185	  undefined
0x186	  undefined
0x187	  undefined
0x188	  undefined
0x189	  undefined
0x18a	  undefined
0x18b	  undefined
0x18c	  undefined
0x18d	  undefined
0x18e	  undefined
0x18f	  undefined

0x190	MAX


[ BIOS ]

0x000	g etmpb		(long ptr) unsupported
0x001	b ubconstat	(short dev)
0x002	b ubconin	(short dev)
0x003	b ubconout	(short dev, short c)
0x004	b rwabs		(short rwflag, void *buffer, short number,
			 short recno, short dev, long lrecno)
0x005	b setexc	(short number, long vector)
0x006	b tickcal	(void)
0x007	b getbpb	(short dev)
0x008	b ubcostat	(short dev)
0x009	b mediach	(short dev)
0x00a	b drvmap	(void)
0x00b	b kbshift	(short mode)
0x00c	  passthrough
0x00d	  passthrough
0x00e	  passthrough
0x00f	  passthrough

0x010	  passthrough
0x011	  passthrough
0x012	  passthrough
0x013	  passthrough
0x014	  passthrough
0x015	  passthrough
0x016	  passthrough
0x017	  passthrough
0x018	  passthrough
0x019	  passthrough
0x01a	  passthrough
0x01b	  passthrough
0x01c	  passthrough
0x01d	  passthrough
0x01e	  passthrough
0x01f	  passthrough

0x020	MAX


[ XBIOS ]

0x000	i nitmouse	(short type, long param, long vptr) passthrough
0x001	s sbrk		(short size) passthrough
0x002	p hysbase	(void) passthrough
0x003	l ogbase	(void) passthrough
0x004	g etrez		(void) passthrough
0x005	v setscreen	(long log, long phys, short rez, short mode)
0x006	s etpalette	(long palptr) passthrough
0x007	s etcolor	(short colornum, short mixture) passthrough
0x008	f loprd		(long buf, long x, short d, short sect, short trk,
			 short side, short n) passthrough
0x009	f lopwr		(long buf, long x, short d, short sect, short trk,
			 short side, short n) passthrough
0x00a	f lopfmt	(long buf, long x, short d, short spt, short t,
			 short sd, short i, long m, short v) passthrough
0x00b	  passthrough
0x00c	m idiws		(short cnt, const char *buf)
0x00d	m fpint		(short vnum, long vptr) passthrough
0x00e	u iorec		(short dev)
0x00f	u rsconf	(short baud, short flow, short uc, short rs, short ts, short sc)

0x010	k eytbl		(char *unshift, char *shift, char *caps)
0x011	r andom		(void)
0x012	p rotobt	(long buf, long serial, short dsktyp, short exec) passthrough
0x013	f lopver	(long buf, long x, short d, short sect, short trk,
			 short sd, short n) passthrough
0x014	s crdmp		(void) passthrough
0x015	c ursconf	(short cmd, short op)
0x016	s ettime	(void)
0x017	g ettime	(ulong datetime)
0x018	b ioskeys	(void)
0x019	o kbdws		(short len_minus1, long ptr) passthrough
0x01a	j disint	(short vnum) passthrough
0x01b	j enabint	(short vnum) passthrough
0x01c	g iaccess	(short data, short reg) passthrough
0x01d	o ffgibit	(short ormask) passthrough
0x01e	o ngibit	(short andmask) passthrough
0x01f	x btimer	(short timer, short ctrl, short data, long vptr) passthrough

0x020	d osound	(const char *ptr)
0x021	s etprt		(short config) passthrough
0x022	k bdvbase	(void) passthrough
0x023	k brate		(short delay, short reprate) passthrough
0x024	p rtblk		(long pblkptr) passthrough
0x025	v sync		(void) passthrough
0x026	s upexec	(void *funcptr, long a1, long a2, long a3, long a4, long a5)
0x027	p untaes	(void) passthrough
0x028	  passthrough
0x029	f loprate	(short drive, short rate) passthrough
0x02a	d MAread	(long sector, short count, long buffer, short devno) passthrough
0x02b	d MAwrite	(long sector, short count, long buffer, short devno) passthrough
0x02c	b conmap	(short dev)
0x02d	  passthrough
0x02e	n VMaccess	(short op, short start, short count, long buf) passthrough
0x02f	w aketime	(ushort w_date, ushort w_time) passthrough

	/* MetaDOS XBIOS extensions (0x30 - 0x3f) */

0x030	m etainit	(void *metainit) unsupported
0x031	m etaopen	(short drive, void *metaopen) unsupported
0x032	m etaclose	(short drive) unsupported
0x033	m etaread	(short drive, void *buffer, ulong first,
			 ushort count) unsupported
0x034	m etawrite	(short drive, void *buffer, ulong first,
			 ushort count) unsupported
0x035	m etaseek	(short drive, ulong offset) unsupported
0x036	m etastatus	(short drive, void *extended) unsupported
0x037	m etaioctl	(short drive, long magic, short opcode,
			 void *buffer) unsupported
0x038	  undefined
0x039	  undefined
0x03a	  undefined
0x03b	m etastartaudio	(short drive, ushort dummy, void *tracks) unsupported
0x03c	m etastopaudio	(short drive) unsupported
0x03d	m etasetsongtime(short drive, ushort dummy, ulong start,
			 ulong end) unsupported
0x03e	m etagettoc	(short drive, ushort dummy, void *tocentry) unsupported
0x03f	m etadiscinfo	(short drive, void *discinfo) unsupported

0x040	b litmode	(short flag) passthrough
0x041	  passthrough
0x042	  passthrough
0x043	  passthrough
0x044	  passthrough
0x045	  passthrough
0x046	  passthrough
0x047	  passthrough
0x048	  passthrough
0x049	  passthrough
0x04a	  passthrough
0x04b	  passthrough
0x04c	  passthrough
0x04d	  passthrough
0x04e	  passthrough
0x04f	  passthrough

0x050	e setShift	(short mode) passthrough
0x051	e getShift	(void) passthrough
0x052	e setBank	(short bank) passthrough
0x053	e setColor	(short num, short val) passthrough
0x054	e setPalette	(short start, short count, long ptr) passthrough
0x055	e getPalette	(short start, short count, long ptr) passthrough
0x056	e setGray	(short mode) passthrough
0x057	e setSmear	(short mode) passthrough
0x058	v setMode	(short mode) passthrough
0x059	v getMonitor	(void) passthrough
0x05a	v setSync	(short ext) passthrough
0x05b	v getSize	(short mode) passthrough
0x05c	  passthrough
0x05d	v setRGB	(short index, short count, long *array) passthrough
0x05e	v getRGB	(short index, short count, long *array) passthrough
0x05f	v alidmode	(short mode) passthrough

0x060	d sp_DoBlock	(long data_in, long size_in, long data_out,
			 long size_out) passthrough
0x061	d sp_BlkHandShake(long data_in, long size_in, long data_out,
			  long size_out) passthrough
0x062	d sp_BlkUnpacked(long data_in, long size_in, long data_out,
			 long size_out) passthrough
0x063	d sp_InStream	(long data_in, long blksiz, long numblks, long blksdone) passthrough
0x064	d sp_OutStream	(long data_out, long blksiz, long numblks, long blksdone) passthrough
0x065	d sp_IOStream	(long data_in, long data_out, long blkisiz,
			 long blkosiz, long numblks, long blksdone) passthrough
0x066	d sp_RemoveInterrupts(short mask) passthrough
0x067	d sp_GetWordSize(void) passthrough
0x068	d sp_Lock	(void) passthrough
0x069	d sp_Unlock	(void) passthrough
0x06a	d sp_Available	(long xmem, long ymem) passthrough
0x06b	d sp_Reserve	(long xmem, long ymem) passthrough
0x06c	d sp_LoadProg	(long file, short ability, long buffer) passthrough
0x06d	d sp_ExecProg	(long codeptr, long codesiz, short ability) passthrough
0x06e	d sp_ExecBoot	(long codeptr, long codesiz, short ability) passthrough
0x06f	d sp_LodToBinary(long file, long codeptr) passthrough

0x070	d sp_TriggerHC	(short vector) passthrough
0x071	d sp_RequestUniqueAbility(void) passthrough
0x072	d sp_GetProgAbility(void) passthrough
0x073	d sp_FlushSubroutines(void) passthrough
0x074	d sp_LoadSubroutine(long ptr, long siz, short ability) passthrough
0x075	d sp_InqSubrAbility(short ability) passthrough
0x076	d sp_RunSubroutine(short handle) passthrough
0x077	d sp_Hf0	(short flag) passthrough
0x078	d sp_Hf1	(short flag) passthrough
0x079	d sp_Hf2	(void) passthrough
0x07a	d sp_Hf3	(void) passthrough
0x07b	d sp_BlkWords	(long data_in, long size_in, long data_out,
			 long size_out) passthrough
0x07c	d sp_BlkBytes	(long data_in, long size_in, long data_out,
			 long size_out) passthrough
0x07d	d sp_HStat	(void) passthrough
0x07e	d sp_SetVectors	(long rcvr, long xmtr) passthrough
0x07f	d sp_MultBlocks	(long numsend, long numrecv, long sendblks,
			 long recvblks) passthrough

0x080	l ocksnd	(void) passthrough
0x081	u nlocksnd	(void) passthrough
0x082	s oundcmd	(short mode, short data) passthrough
0x083	s etbuffer	(short region, long beg, long end) passthrough
0x084	s etmode	(short stereo_mode) passthrough
0x085	s ettracks	(short play, short rec) passthrough
0x086	s etmontracks	(short montrack) passthrough
0x087	s etinterrupt	(short src_inter, short cause) passthrough
0x088	b uffoper	(short mode) passthrough
0x089	d sptristate	(short dspxmit, short dsprec) passthrough
0x08a	g pio		(short mode, short data) passthrough
0x08b	d evconnect	(short src, short dst, short sclk, short pre, short proto) passthrough
0x08c	s ndstatus	(short reset) passthrough
0x08d	b uffptr	(long ptr) passthrough
0x08e	  passthrough
0x08f	  passthrough

0x090	  passthrough
0x091	  passthrough
0x092	  passthrough
0x093	  passthrough
0x094	  passthrough
0x095	  passthrough
0x096	v setMask	(short andmask, short ormask) passthrough
0x097	  passthrough
0x098	  passthrough
0x099	  passthrough
0x09a	  passthrough
0x09b	  passthrough
0x09c	  passthrough
0x09d	  passthrough
0x09e	  passthrough
0x09f	  passthrough

0x0a0	MAX

