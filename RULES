#
# These are some standard rules common to all Makefiles.
#

include $(srcdir)/BINFILES
include $(srcdir)/SRCFILES
include $(srcdir)/EXTRAFILES
include $(srcdir)/MISCFILES

ifdef CPU
ifeq ($(CPU),v4e)
MODEL = -mcpu=5475
else
MODEL = -m68$(CPU)
endif
else
# leave empty/default
MODEL =
endif

#
# mapping of CPU names to CFLAGS
#
MODEL_000 = -m68000
MODEL_020 = -m68020
MODEL_02060 = -m68020-60
MODEL_030 = -m68030
MODEL_040 = -m68040
MODEL_060 = -m68060
MODEL_v4e = -mcpu=5475

#
# mapping of TARGET names to CPU
#
CPU_deb = 02060
CPU_000 = 000
CPU_020 = 020
CPU_02060 = 02060
CPU_030 = 030
CPU_040 = 040
CPU_060 = 060
CPU_col = v4e
CPU_ara = 040
CPU_080 = 040
CPU_mil = 02060
CPU_hat = 000
CPU_hat030 = 030


CFLAGS_000 = $(MODEL_000) $(INCLUDES) $(DEFINITIONS) $(GENERAL) $(OPTS) $(WARN)
CFLAGS_020 = $(MODEL_020) $(INCLUDES) $(DEFINITIONS) $(GENERAL) $(OPTS) $(WARN)
CFLAGS_02060 = $(MODEL_02060) $(INCLUDES) $(DEFINITIONS) $(GENERAL) $(OPTS) $(WARN)
CFLAGS_030 = $(MODEL_030) $(INCLUDES) $(DEFINITIONS) $(GENERAL) $(OPTS) $(WARN)
CFLAGS_040 = $(MODEL_040) $(INCLUDES) $(DEFINITIONS) $(GENERAL) $(OPTS) $(WARN)
CFLAGS_060 = $(MODEL_060) $(INCLUDES) $(DEFINITIONS) $(GENERAL) $(OPTS) $(WARN)
CFLAGS_v4e = $(MODEL_v4e) $(INCLUDES) $(DEFINITIONS) $(GENERAL) $(OPTS) $(WARN)


all: all-recursive all-here

clean:: clean-recursive
	rm -f *.o lib*.a *.tmp
	rm -f core report nohup.out errlog
	test "$(compile_all_dirs)" = "" || rm -f $(addsuffix /*.o,$(compile_all_dirs)) $(addsuffix /lib*.a,$(compile_all_dirs))
	test "$(GENFILES)" = "" || rm -rf $(GENFILES)

bakclean:: bakclean-recursive
	rm -f *~ *# *.BAK *.bak
	rm -f *.orig *.rej

distclean:: distclean-recursive
	rm -f *.o lib*.a *.tmp *~ *# *.orig *.rej *.BAK *.bak
	rm -f core report nohup.out errlog
	test "$(GENFILES)" = "" || rm -rf $(GENFILES)
	test "$(SGENFILES)" = "" || rm -rf $(SGENFILES)
	rm -rf .deps

strip: strip-recursive

install: install-recursive

uninstall: uninstall-recursive

DISTFILES = $(MISCFILES) $(SRCFILES)

distdir = $(top_builddir)/freemint-$(VERSION)/$(subdir)

distdir: $(DISTFILES) distdir-local
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -d $$d/$$file \
	  || test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2>/dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file \
	  || exit 1; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test -d $(distdir)/$$subdir \
	  || mkdir $(distdir)/$$subdir \
	  || exit 1; \
	  chmod 777 $(distdir)/$$subdir; \
	  (cd $$subdir && $(MAKE) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \
	    || exit 1; \
	done

distdir-local:

all-recursive clean-recursive bakclean-recursive distclean-recursive \
install-recursive uninstall-recursive dist-recursive strip-recursive::
	@set fnord $(MAKEFLAGS); amf=$$2; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  target=`echo $@ | sed s/-recursive//`; \
	  echo "Making $$target in $$subdir"; \
	  (cd $$subdir && $(MAKE) -r $$target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"

define CC_TEMPLATE
.compile_$(1)/$(2).o: $(2).c
	@echo "$(CC) $(INCLUDES) $(DEFINITIONS) $$(MODEL_$$(CPU_$(1))) $(GENERAL) $(OPTS) $(WARN) $(CPPFLAGS) -c $$< -o $$@"
	$(CC) $(INCLUDES) $$(DEFINITIONS_$(1)) $$(MODEL_$$(CPU_$(1))) $(GENERAL) $(OPTS) $(WARN) $(CPPFLAGS) -Wp,-MD,.compile_$(1)/.deps/$(2).P -c $$< -o $$@

-include .compile_$(1)/.deps/$(2).P

endef

define AS_TEMPLATE
.compile_$(1)/$(2).o: $(2).S
	@echo "$(CC) $(INCLUDES) $(DEFINITIONS) $$(MODEL_$$(CPU_$(1))) $(GENERAL) $(OPTS) $(WARN) $(CPPFLAGS) -c $$< -o $$@"
	$(CC) $(INCLUDES) $$(DEFINITIONS_$(1)) $$(MODEL_$$(CPU_$(1))) $(GENERAL) $(OPTS) $(WARN) $(CPPFLAGS) -Wp,-MD,.compile_$(1)/.deps/$(2).P -c $$< -o $$@

-include .compile_$(1)/.deps/$(2).P

endef
