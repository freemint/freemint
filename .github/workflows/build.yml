name: Linux build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cpu_target: [ "000", "02060", "030", "040", "060", "col", "prg", "ste", "tt", "firebee", "ara", "deb" ]
        cross_tool: [ "m68k-atari-mint" ]
        include:
          - cpu_target: 000
            artifact: freemint-cpu-000
          - cpu_target: 02060
            artifact: freemint-cpu-020
          - cpu_target: 030
            artifact: freemint-cpu-030
          - cpu_target: 040
            artifact: freemint-cpu-040
          - cpu_target: 060
            artifact: freemint-cpu-060
          - cpu_target: col
            artifact: freemint-cpu-coldfire
          - cpu_target: deb
            artifact: freemint-cpu-debug
          - cpu_target: prg
            artifact: usb4tos
          - cpu_target: ste
            artifact: freemint-st_ste
          - cpu_target: tt
            artifact: freemint-tt_falcon_clones
          - cpu_target: firebee
            artifact: freemint-firebee
          - cpu_target: ara
            artifact: freemint-aranym
    steps:
      - uses: actions/checkout@v4
      - name: Install SSH keys
        if: ${{ github.event_name == 'push' }}
        env:
          SSH_ID: ${{ secrets.SSH_ID }}
        run: ./.scripts/install_ssh_id.sh
      - name: Setup environment
        env:
          CPU_TARGET: ${{ matrix.cpu_target }}
          CROSS_TOOL: ${{ matrix.cross_tool }}
        run: ./.scripts/setup_env.sh
      - name: Install packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SYSROOT_DIR="/" ./.scripts/install-freemint.sh binutils gcc mintbin
          ./.scripts/install-freemint.sh mintlib fdlibm gemlib cflib gemma
          ./.scripts/install-hcp.sh
          ./.scripts/install-udo.sh
          ./.scripts/install-dosfstools.sh
      - name: Install Applications
        run: ./.scripts/install-apps.sh
      - name: libcmini
        run: ./.scripts/install-libcmini.sh
      - name: build
        run: |
          ./.scripts/before_script.sh
          ./.scripts/build.sh
      - name: deploy
        if: ${{ github.event_name == 'push' && matrix.cpu_target != 'deb' }}
        env:
          COMMITER_NAME: ${{ github.event.commits[0].author.name }}
          COMMITER_EMAIL: ${{ github.event.commits[0].author.email }}
        run: ./.scripts/deploy.sh
      - name: Upload Artifact
        if: ${{ github.event_name == 'pull_request' || matrix.cpu_target == 'deb' }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: /tmp/freemint-deploy
          retention-days: 10
